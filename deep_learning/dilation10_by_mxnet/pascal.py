conv1_1 = mx.symbol.Convolution(name='conv1_1', data=data , num_filter=64, pad=(0,0), kernel=(3,3), stride=(1,1), no_bias=False)
relu1_1 = mx.symbol.Activation(name='relu1_1', data=conv1_1 , act_type='relu')
conv1_2 = mx.symbol.Convolution(name='conv1_2', data=relu1_1 , num_filter=64, pad=(0,0), kernel=(3,3), stride=(1,1), no_bias=False)
relu1_2 = mx.symbol.Activation(name='relu1_2', data=conv1_2 , act_type='relu')
pool1 = mx.symbol.Pooling(name='pool1', data=relu1_2 , pad=(0,0), kernel=(2,2), stride=(2,2), pool_type='max')
conv2_1 = mx.symbol.Convolution(name='conv2_1', data=pool1 , num_filter=128, pad=(0,0), kernel=(3,3), stride=(1,1), no_bias=False)
relu2_1 = mx.symbol.Activation(name='relu2_1', data=conv2_1 , act_type='relu')
conv2_2 = mx.symbol.Convolution(name='conv2_2', data=relu2_1 , num_filter=128, pad=(0,0), kernel=(3,3), stride=(1,1), no_bias=False)
relu2_2 = mx.symbol.Activation(name='relu2_2', data=conv2_2 , act_type='relu')
pool2 = mx.symbol.Pooling(name='pool2', data=relu2_2 , pad=(0,0), kernel=(2,2), stride=(2,2), pool_type='max')
conv3_1 = mx.symbol.Convolution(name='conv3_1', data=pool2 , num_filter=256, pad=(0,0), kernel=(3,3), stride=(1,1), no_bias=False)
relu3_1 = mx.symbol.Activation(name='relu3_1', data=conv3_1 , act_type='relu')
conv3_2 = mx.symbol.Convolution(name='conv3_2', data=relu3_1 , num_filter=256, pad=(0,0), kernel=(3,3), stride=(1,1), no_bias=False)
relu3_2 = mx.symbol.Activation(name='relu3_2', data=conv3_2 , act_type='relu')
conv3_3 = mx.symbol.Convolution(name='conv3_3', data=relu3_2 , num_filter=256, pad=(0,0), kernel=(3,3), stride=(1,1), no_bias=False)
relu3_3 = mx.symbol.Activation(name='relu3_3', data=conv3_3 , act_type='relu')
pool3 = mx.symbol.Pooling(name='pool3', data=relu3_3 , pad=(0,0), kernel=(2,2), stride=(2,2), pool_type='max')
conv4_1 = mx.symbol.Convolution(name='conv4_1', data=pool3 , num_filter=512, pad=(0,0), kernel=(3,3), stride=(1,1), no_bias=False)
relu4_1 = mx.symbol.Activation(name='relu4_1', data=conv4_1 , act_type='relu')
conv4_2 = mx.symbol.Convolution(name='conv4_2', data=relu4_1 , num_filter=512, pad=(0,0), kernel=(3,3), stride=(1,1), no_bias=False)
relu4_2 = mx.symbol.Activation(name='relu4_2', data=conv4_2 , act_type='relu')
conv4_3 = mx.symbol.Convolution(name='conv4_3', data=relu4_2 , num_filter=512, pad=(0,0), kernel=(3,3), stride=(1,1), no_bias=False)
relu4_3 = mx.symbol.Activation(name='relu4_3', data=conv4_3 , act_type='relu')
conv5_1 = mx.symbol.Convolution(name='conv5_1', data=relu4_3 , num_filter=512, pad=(0,0), kernel=(3,3), stride=(1,1), no_bias=False, dilate=(2, 2))
relu5_1 = mx.symbol.Activation(name='relu5_1', data=conv5_1 , act_type='relu')
conv5_2 = mx.symbol.Convolution(name='conv5_2', data=relu5_1 , num_filter=512, pad=(0,0), kernel=(3,3), stride=(1,1), no_bias=False, dilate=(2, 2))
relu5_2 = mx.symbol.Activation(name='relu5_2', data=conv5_2 , act_type='relu')
conv5_3 = mx.symbol.Convolution(name='conv5_3', data=relu5_2 , num_filter=512, pad=(0,0), kernel=(3,3), stride=(1,1), no_bias=False, dilate=(2, 2))
relu5_3 = mx.symbol.Activation(name='relu5_3', data=conv5_3 , act_type='relu')
fc6 = mx.symbol.Convolution(name='fc6', data=relu5_3 , num_filter=4096, pad=(0,0), kernel=(7,7), stride=(1,1), no_bias=False, dilate=(4, 4))
relu6 = mx.symbol.Activation(name='relu6', data=fc6 , act_type='relu')
drop6 = mx.symbol.Dropout(name='drop6', data=relu6 , p=0.500000)
fc7 = mx.symbol.Convolution(name='fc7', data=drop6 , num_filter=4096, pad=(0,0), kernel=(1,1), stride=(1,1), no_bias=False)
relu7 = mx.symbol.Activation(name='relu7', data=fc7 , act_type='relu')
drop7 = mx.symbol.Dropout(name='drop7', data=relu7 , p=0.500000)
fc_final = mx.symbol.Convolution(name='fc_final', data=drop7 , num_filter=21, pad=(0,0), kernel=(1,1), stride=(1,1), no_bias=False)
ct_conv1_1 = mx.symbol.Convolution(name='ct_conv1_1', data=fc_final , num_filter=42, pad=(33,33), kernel=(3,3), stride=(1,1), no_bias=False)
ct_relu1_1 = mx.symbol.Activation(name='ct_relu1_1', data=ct_conv1_1 , act_type='relu')
ct_conv1_2 = mx.symbol.Convolution(name='ct_conv1_2', data=ct_relu1_1 , num_filter=42, pad=(0,0), kernel=(3,3), stride=(1,1), no_bias=False)
ct_relu1_2 = mx.symbol.Activation(name='ct_relu1_2', data=ct_conv1_2 , act_type='relu')
ct_conv2_1 = mx.symbol.Convolution(name='ct_conv2_1', data=ct_relu1_2 , num_filter=84, pad=(0,0), kernel=(3,3), stride=(1,1), no_bias=False, dilate=(2, 2))
ct_relu2_1 = mx.symbol.Activation(name='ct_relu2_1', data=ct_conv2_1 , act_type='relu')
ct_conv3_1 = mx.symbol.Convolution(name='ct_conv3_1', data=ct_relu2_1 , num_filter=168, pad=(0,0), kernel=(3,3), stride=(1,1), no_bias=False, dilate=(4, 4))
ct_relu3_1 = mx.symbol.Activation(name='ct_relu3_1', data=ct_conv3_1 , act_type='relu')
ct_conv4_1 = mx.symbol.Convolution(name='ct_conv4_1', data=ct_relu3_1 , num_filter=336, pad=(0,0), kernel=(3,3), stride=(1,1), no_bias=False, dilate=(8, 8))
ct_relu4_1 = mx.symbol.Activation(name='ct_relu4_1', data=ct_conv4_1 , act_type='relu')
ct_conv5_1 = mx.symbol.Convolution(name='ct_conv5_1', data=ct_relu4_1 , num_filter=672, pad=(0,0), kernel=(3,3), stride=(1,1), no_bias=False, dilate=(16, 16))
ct_relu5_1 = mx.symbol.Activation(name='ct_relu5_1', data=ct_conv5_1 , act_type='relu')
ct_fc1 = mx.symbol.Convolution(name='ct_fc1', data=ct_relu5_1 , num_filter=672, pad=(0,0), kernel=(3,3), stride=(1,1), no_bias=False)
ct_fc1_relu = mx.symbol.Activation(name='ct_fc1_relu', data=ct_fc1 , act_type='relu')
ct_final = mx.symbol.Convolution(name='ct_final', data=ct_fc1_relu , num_filter=21, pad=(0,0), kernel=(1,1), stride=(1,1), no_bias=False)
prob = mx.symbol.SoftmaxOutput(name='prob', data=ct_final )
